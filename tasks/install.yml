---
- name: Ensure Gitea group exists.
  ansible.builtin.group:
    name: "{{ gitea_group }}"
    state: present
    system: true

- name: Ensure Gitea user exists.
  ansible.builtin.user:
    name: "{{ gitea_user }}"
    group: "{{ gitea_group }}"
    home: "{{ gitea_home_dir }}"
    shell: /usr/sbin/nologin
    system: true

- name: Check if Gitea is already installed.
  ansible.builtin.command:
    cmd: "{{ gitea_bin_dir }}/gitea --version"
  register: __gitea_version_result
  ignore_errors: true
  changed_when: false

- name: Stop Gitea service.
  ansible.builtin.service:
    name: "{{ gitea_daemon }}"
    state: stopped
  when: __gitea_version_result is failed
        or not __gitea_version_result.stdout is search(gitea_version)

- name: Install Gitea.
  ansible.builtin.get_url:
    url: "https://dl.gitea.com/gitea/{{ gitea_version }}/gitea-{{ gitea_version }}-linux-amd64"
    dest: "{{ gitea_bin_dir }}/gitea"
    owner: "{{ gitea_user }}"
    group: "{{ gitea_group }}"
    mode: 0755
  notify: restart gitea
  when: __gitea_version_result is failed
        or not __gitea_version_result.stdout is search(gitea_version)

- name: Ensure Gitea data directory exists.
  ansible.builtin.file:
    path: "{{ gitea_data_dir }}"
    owner: "{{ gitea_user }}"
    group: "{{ gitea_group }}"
    state: directory
    mode: 0750

- name: Ensure Gitea config directory exists.
  ansible.builtin.file:
    path: "{{ gitea_config_dir }}"
    owner: "{{ gitea_user }}"
    group: "{{ gitea_group }}"
    state: directory
    mode: 0750
